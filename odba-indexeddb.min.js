'use strict';function Driver(b){Object.defineProperty(this,"name",{value:b})}Driver.getDriver=function(b){if("indexeddb"==b.toLowerCase())return new IndexedDBDriver};function Result(b){Object.defineProperty(this,"rows",{value:b})}Result.prototype.__defineGetter__("length",function(){return this.rows.length});Result.prototype.find=function(b){return(new ResultFilter).find(this,b)};function ResultFilter(){}ResultFilter.prototype.find=function(b,a){var c=[];a||(a={});for(var d=0,e=b.rows;d<b.length;++d){var f=e[d];this.check(f,a)&&c.push(f)}return c};ResultFilter.prototype.check=function(b,a){var c=!1,d=Object.keys(a);if(0==d.length)c=!0;else if(1==d.length)c=this.checkProp(b,d[0],a);else for(var c=!0,e=0;e<d.length;++e)if(!this.checkProp(b,d[e],a)){c=!1;break}return c};
ResultFilter.prototype.checkProp=function(b,a,c){var d;c=c[a];if("object"!=typeof c)d=this.$eq(b,a,c);else{var e=Object.keys(c);if(0==e.length)d=!0;else if(1==e.length)d=this.checkOp(b,a,e[0],c);else{d=!0;for(var f=0;f<e.length;++f)if(!this.checkOp(b,a,e[f],c)){d=!1;break}}}return d};
ResultFilter.prototype.checkOp=function(b,a,c,d){if("$eq"==c)b=this.$eq(b,a,d.$eq);else if("$ne"==c)b=this.$ne(b,a,d.$ne);else if("$lt"==c)b=this.$lt(b,a,d.$lt);else if("$le"==c)b=this.$le(b,a,d.$le);else if("$gt"==c)b=this.$gt(b,a,d.$gt);else if("$ge"==c)b=this.$ge(b,a,d.$ge);else if("$like"==c)b=this.$like(b,a,d.$like);else if("$notLike"==c)b=this.$notLike(b,a,d.$notLike);else if("$in"==c)b=this.$in(b,a,d.$in);else if("$notIn"==c)b=this.$notIn(b,a,d.$notIn);else throw Error("Unknown operator: '"+
c+"'.");return b};ResultFilter.prototype.$eq=function(b,a,c){return void 0===c?void 0===b[a]:null===c?null===b[a]:b[a]==c};ResultFilter.prototype.$ne=function(b,a,c){return void 0===c?void 0!==b[a]:null===c?null!==b[a]:b[a]!=c};ResultFilter.prototype.$lt=function(b,a,c){return void 0===c||null===c?!1:b[a]<c};ResultFilter.prototype.$le=function(b,a,c){return void 0===c||null===c?!1:b[a]<=c};ResultFilter.prototype.$gt=function(b,a,c){return void 0===c||null===c?!1:b[a]>c};
ResultFilter.prototype.$ge=function(b,a,c){return void 0===c||null===c?!1:b[a]>=c};ResultFilter.prototype.$like=function(b,a,c){return void 0===c||null===c?this.$eq(b,a,c):(new RegExp(c)).test(b[a])};ResultFilter.prototype.$notLike=function(b,a,c){return void 0===c||null===c?this.$ne(b,a,c):!this.$like(b,a,c)};ResultFilter.prototype.$in=function(b,a,c){return void 0===c||null===c?!1:0<=c.indexOf(b[a])};ResultFilter.prototype.$notIn=function(b,a,c){return!this.$in(b,a,c)};var util={inherits:function(b,a){b.super_=a;b.prototype=Object.create(a.prototype,{constructor:{value:b,enumerable:!1,writable:!0,configurable:!0}})},_extend:function(b,a){if("object"==typeof a)for(var c=0,d=Object.keys(a);c<d.length;++c){var e=d[c];b[e]=a[e]}return b},getBrowserName:function(){return window.chrome?"Chrome":"Other"}};function IndexedDBConnection(b){Object.defineProperty(this,"config",{value:b});Object.defineProperty(this,"database",{value:void 0,enumerable:!0,writable:!0});Object.defineProperty(this,"transaction",{value:void 0,writable:!0});try{Object.defineProperty(this,"indexedDB",{value:Modernizr.indexedDB})}catch(a){Object.defineProperty(this,"indexedDB",{value:window.indexedDB})}}IndexedDBConnection.prototype.clone=function(){return new IndexedDBConnection(util._extend({},this.config))};
IndexedDBConnection.prototype.open=function(b){var a=this,c;c=this.indexedDB;if(this.connected)b&&b(void 0,this.database);else{if(1>arguments.length)throw Error("Callback expected.");c=this.config.version?c.open(this.config.database,this.config.version):c.open(this.config.database);c.onsuccess=function(c){a.database=new IndexedDBDatabase(a,c.target.result);b&&b(void 0,a.database)};c.onerror=function(a){b&&b(a)}}};
IndexedDBConnection.prototype.__defineGetter__("connected",function(){return void 0!==this.database&&null!==this.database});IndexedDBConnection.prototype.close=function(b){this.database&&this.database.native.close();this.database=void 0;b&&b()};
IndexedDBConnection.prototype.createDatabase=function(b,a){var c=this,d=this.indexedDB;if(this.connected)throw Error("Connection opened.");d=d.open(this.config.database);d.onerror=function(b){c.transaction=void 0;a&&a(b)};d.onupgradeneeded=function(a){c.transaction=new IndexedDBTransaction(a.currentTarget.transaction,c);b&&b(new IndexedDBDatabase(c,a.target.result))};d.onsuccess=function(b){c.transaction=void 0;b.target.result.close();a&&a()}};
IndexedDBConnection.prototype.alterDatabase=function(b,a){var c=this,d=this.indexedDB,e;if(this.connected)throw Error("Connection opened.");if(1>arguments.length)throw Error("Operation to alter schema expected.");e=d.open(this.config.database);e.onerror=function(b){a&&a(b)};e.onsuccess=function(e){e=e.target.result;var g;g=e.version+1;e.close();e=d.open(c.config.database,g);e.onupgradeneeded=function(a){c.transaction=new IndexedDBTransaction(a.currentTarget.transaction,c);b(new IndexedDBDatabase(c,
a.target.result))};e.onerror=function(b){c.transaction=void 0;a&&a(b)};e.onsuccess=function(b){c.transaction=void 0;b.target.result.close();a&&a()}}};IndexedDBConnection.prototype.dropDatabase=function(b){this.indexedDB.deleteDatabase(this.config.database);b&&b()};
IndexedDBConnection.prototype.hasDatabase=function(b,a){var c=this.indexedDB,d;if(1>arguments.length)throw Error("Callback expected.");1==arguments.length&&(a=arguments[0],b=this.config.database);if("Chrome"==util.getBrowserName())d=this.indexedDB.webkitGetDatabaseNames(),d.onsuccess=function(c){a(void 0,c.target.result.contains(b))},d.onerror=function(b){a(b)};else{var e=!0;d=c.open(b);d.onupgradeneeded=function(a){e=!1};d.onsuccess=function(b){d.result.close();e&&c.deleteDatabase(self);a(void 0,
e)}}};
IndexedDBConnection.prototype.beginTransaction=function(b,a,c){var d;1==arguments.length?arguments[0]instanceof Array?(a=arguments[0],b=c=void 0):"object"==typeof arguments[0]&&(c=arguments[0],b=a=void 0):2==arguments.length&&(arguments[0]instanceof Array?(c=arguments[1],a=arguments[0],b=void 0):arguments[1]instanceof Array||"string"==typeof arguments[1]||(c=arguments[1],a=void 0));b=b||"readwrite";"string"==typeof a&&(a=[a]);c||(c={});if(this.hasTransaction()){d=this.transaction;if("readonly"==d.mode&&
"readonly"!=b)throw Error("Active transaction is read-only and it can't be promoted to another mode.");if("readonly"==d.mode||"readwrite"==d.mode){if(!a)a=this.database.objectStoreNames;else if(1>a.length)throw Error("Object store(s) expected.");for(var e=0;e<a.length;++e){var f=a[e];if(0>d.objectStoreNames.indexOf(f))throw Error("There's an active transaction and the new transaction can't be integrated therein. The object store '"+f+"' isn't in the active transaction.");}}}else{if(!a)a=this.database.objectStoreNames;
else if(1>a.length)throw Error("Object store(s) expected.");d=new IndexedDBTransaction(this.database.native.transaction(a,b),this,a,c)}return this.transaction=d};IndexedDBConnection.prototype.hasTransaction=function(b){var a,c=!1;(a=this.transaction)&&(c=b?a.mode==b:!0);return c};
IndexedDBConnection.prototype.runTransaction=function(b,a,c){if(2>arguments.length)throw Error("Transaction mode and operation expected.");if(this.hasTransaction())throw Error("A transaction is active. IndexedDB can't nest transactions.");this.beginTransaction(b,void 0,{error:function(a){c&&c(a)},complete:function(a){c&&c()}});a(this.database)};function IndexedDBDatabase(b,a,c){Object.defineProperty(this,"connection",{value:b});Object.defineProperty(this,"name",{value:a.name,enumerable:!0});Object.defineProperty(this,"version",{value:a.version,enumerable:!0});Object.defineProperty(this,"native",{value:a})}IndexedDBDatabase.prototype.__defineGetter__("transaction",function(){return this.connection.transaction});
IndexedDBDatabase.prototype.__defineGetter__("objectStoreNames",function(){for(var b=[],a=0,c=this.native.objectStoreNames;a<c.length;++a)b.push(String(c[a]));return b});IndexedDBDatabase.prototype.containsObjectStore=function(b){return this.native.objectStoreNames.contains(b)};IndexedDBDatabase.prototype.containsObjectStores=function(b){var a;a=!0;for(var c=0;c<b.length;++c)if(!this.containsObjectStore(b[c])){a=!1;break}return a};
IndexedDBDatabase.prototype.hasTable=function(b,a){if(2>arguments.length)throw Error("Table name and callback expected.");a(void 0,this.containsObjectStore(b))};IndexedDBDatabase.prototype.hasTables=function(b,a){var c;if(2>arguments.length)throw Error("Table names and callback expected.");if(0==b.length)c=!1;else{c=!0;for(var d=0;d<b.length;++d)if(!this.containsObjectStore(b[d])){c=!1;break}}a(void 0,c)};IndexedDBDatabase.prototype.getTable=function(b){return new IndexedDBTable(this,this.transaction.getObjectStore(b))};
IndexedDBDatabase.prototype.findTable=function(b,a){var c;if(2>arguments.length)throw Error("Table name and callback expected.");this.containsObjectStore(b)&&(c=this.connection.beginTransaction(void 0,b,{error:function(b){a(b)}}),c=new IndexedDBTable(this,c.getObjectStore(b)));a(void 0,c)};
IndexedDBDatabase.prototype.createTable=function(b,a,c){if(1>arguments.length)throw Error("Table name expected.");2==arguments.length&&arguments[1]instanceof Function&&(c=arguments[1],a=void 0);a=util._extend({},a);a.hasOwnProperty("id")&&!a.hasOwnProperty("keyPath")&&(a.keyPath=a.id);if(this.transaction)if(this.native.objectStoreNames.contains(b))c&&c(Error("Object store '"+b+"' already exists."));else{var d=this.native.createObjectStore(b,a);c&&c(void 0,new IndexedDBTable(this,d))}else c&&c(Error("Database.createTable() only into Connection.createDatabase() or Connection.alterDatabase()."))};
IndexedDBDatabase.prototype.createTables=function(b,a){var c=[];if(this.transaction){for(var d=0;d<b.length;++d){var e=b[d];c.push(new IndexedDBTable(this,this.native.createObjectStore(e.name,e)))}a&&a(void 0,c)}else a&&a(Error("Database.createTables() only into Connection.createDatabase() or Connection.alterDatabase()."))};IndexedDBDatabase.prototype.dropTable=function(b,a){this.connection.hasTransaction("versionchange")?(this.containsObjectStore(b)&&this.native.deleteObjectStore(b),a&&a()):a&&a(Error("Database.dropTable() only into Connection.alterDatabase()."))};
IndexedDBDatabase.prototype.findIndex=function(b,a,c){var d,e;if(3>arguments.length)throw Error("Table name, index name and callback expected.");this.containsObjectStore(b)&&(d=this.activeTransaction||this.native.transaction([b],"readonly"),d=d.objectStore(b),d.indexNames.contains(a)&&(e=(new IndexedDBTable(this,d)).indexes[a]));c(void 0,e)};
IndexedDBDatabase.prototype.hasIndex=function(b,a,c){var d;if(3>arguments.length)throw Error("Table name, index name and callback expected.");this.containsObjectStore(b)?(d=this.connection.beginTransaction(void 0,b),d.on("error",function(a){c(a)}),d=d.getObjectStore(b).indexNames.contains(a)):d=!1;c(void 0,d)};
IndexedDBDatabase.prototype.createIndex=function(b,a,c,d,e){var f;if(3>arguments.length)throw Error("Table name, index name and indexing column name expected.");4==arguments.length&&arguments[3]instanceof Function&&(e=arguments[3],d=void 0);this.connection.hasTransaction("versionchange")?(f=this.transaction,this.containsObjectStore(b)?(f=f.getObjectStore(b),f.indexNames.contains(a)?e&&e(Error("Index '"+a+"' on '"+b+"' already exists.")):(f.createIndex(a,c,d),e&&e())):e&&e(Error("Object store '"+b+
"' doesn't exist."))):e&&e(Error("Database.createIndex() only into Connection.createDatabase() or Connection.alterDatabase()."))};IndexedDBDatabase.prototype.dropIndex=function(b,a,c){var d;if(2>arguments.length)throw Error("Table name and index name expected.");this.connection.hasTransaction("versionchange")?(d=this.transaction,this.containsObjectStore(b)&&(d=d.getObjectStore(b),d.indexNames.contains(a)&&d.deleteIndex(a)),c&&c()):c&&c(Error("Database.dropIndex() only into Connection.alterDatabase()."))};function IndexedDBDriver(){IndexedDBDriver.super_.call(this,"IndexedDB")}util.inherits(IndexedDBDriver,Driver);IndexedDBDriver.prototype.createConnection=function(b){if(!b||!b.database)throw Error("Database name expected.");return new IndexedDBConnection(b)};function IndexedDBIndex(b,a){Object.defineProperty(this,"table",{value:b});Object.defineProperty(this,"name",{value:a.name});Object.defineProperty(this,"column",{value:a.keyPath});Object.defineProperty(this,"unique",{value:a.unique});Object.defineProperty(this,"native",{value:a})}IndexedDBIndex.prototype.__defineGetter__("database",function(){return this.table.database});IndexedDBIndex.prototype.__defineGetter__("connection",function(){return this.table.connection});function IndexedDBResult(b,a){a||(a={});a.byKey||(a.byKey=!1);a.byIndex||(a.byIndex=!1);IndexedDBResult.super_.call(this,b);Object.defineProperty(this,"byKey",{value:a.byKey});Object.defineProperty(this,"byIndex",{value:a.byIndex})}util.inherits(IndexedDBResult,Result);function IndexedDBTable(b,a){var c={},d={};Object.defineProperty(this,"database",{value:b});Object.defineProperty(this,"name",{value:a.name});Object.defineProperty(this,"keyPath",{value:a.keyPath});Object.defineProperty(this,"autoIncrement",{value:a.autoIncrement});Object.defineProperty(this,"connection",{value:b.connection});Object.defineProperty(this,"indexes",{value:c});Object.defineProperty(this,"indexed",{value:d});for(var e=0;e<a.indexNames.length;++e){var f=a.indexNames[e],g=new IndexedDBIndex(this,
a.index(f));c[f]=g;d[g.column]=g}}IndexedDBTable.prototype.__defineGetter__("transaction",function(){return this.connection.transaction});IndexedDBTable.prototype.hasIndex=function(b,a){if(2>arguments.length)throw Error("Index name and callback expected.");this.database.hasIndex(this.name,b,a)};IndexedDBTable.prototype.findIndex=function(b,a){if(2>arguments.length)throw Error("Index name and callback expected.");this.database.findIndex(this.name,b,a)};
IndexedDBTable.prototype.createIndex=function(b,a,c,d){if(2>arguments.length)throw Error("Index name and indexing column expected.");3==arguments.length&&arguments[2]instanceof Function&&(d=arguments[2],c={});this.database.createIndex(this.name,b,a,c,d)};IndexedDBTable.prototype.dropIndex=function(b,a){if(1>arguments.length)throw Error("Index name expected.");this.database.dropIndex(this.name,b,a)};
IndexedDBTable.prototype.find=function(b,a){var c;if(1>arguments.length)throw Error("Callback expected.");if(1==arguments.length)if(arguments[0]instanceof Function)a=arguments[0],b=void 0;else throw Error("Callback expected.");b||(b={});c=Object.keys(b);0==c.length?this.findAll(a):1==c.length?(c=c[0],c==this.keyPath?this.findByKeyPath(b,a):this.indexed[c]?this.findByIndex(b,a):this.findByFilter(b,a)):this.findByFilter(b,a)};
IndexedDBTable.prototype.findByFilter=function(b,a){var c,d=[],e=new ResultFilter;if(1>arguments.length)throw Error("Callback expected.");if(1==arguments.length)if(arguments[0]instanceof Function)a=arguments[0],b=void 0;else throw Error("Callback expected.");b&&0!=Object.keys(b).length?(c=this.connection.beginTransaction(void 0,this.name),c.on("error",function(b){a(b)}),c.on("complete",function(b){a(void 0,new Result(d))}),c=c.getObjectStore(this.name),c=c.openCursor(),c.onsuccess=function(a){if(a=
a.target.result){var c=a.value;e.check(c,b)&&d.push(c);a.continue()}}):this.findAll(a)};IndexedDBTable.prototype.getIDBKeyRange=function(b,a){var c;"$eq"==b?c=IDBKeyRange.only(a.$eq):"$lt"==b?c=IDBKeyRange.upperBound(a.$lt,!0):"$le"==b?c=IDBKeyRange.upperBound(a.$le):"$gt"==b?c=IDBKeyRange.lowerBound(a.$gt,!0):"$ge"==b&&(c=IDBKeyRange.lowerBound(a.$ge));return c};
IndexedDBTable.prototype.findByKeyPath=function(b,a){var c,d;c=b[Object.keys(b)[0]];if("object"!=typeof c)d=IDBKeyRange.only(c);else{var e=Object.keys(c);1==e.length&&(d=this.getIDBKeyRange(e[0],c))}if(d){var f=[];c=this.connection.beginTransaction(void 0,this.name);c.on("error",function(b){a(b)});c.on("complete",function(b){a(void 0,new IndexedDBResult(f,{byKey:!0}))});d=c.getObjectStore(this.name).openCursor(d);d.onerror=function(b){a(b)};d.onsuccess=function(a){if(a=a.target.result)f.push(a.value),
a.continue()}}else this.findByFilter(b,a)};
IndexedDBTable.prototype.findByIndex=function(b,a){var c,d,e;c=Object.keys(b)[0];d=this.indexed[c];c=b[c];if("object"!=typeof c)e=IDBKeyRange.only(c);else{var f=Object.keys(c);1==f.length&&(e=this.getIDBKeyRange(f[0],c))}if(e){var g=[];c=this.connection.beginTransaction(void 0,this.name);c.on("error",function(b){a(b)});c.on("complete",function(b){a(void 0,new IndexedDBResult(g,{byIndex:!0}))});d=c.getObjectStore(this.name).index(d.name).openCursor(e);d.onerror=function(b){a(b)};d.onsuccess=function(a){if(a=
a.target.result)g.push(a.value),a.continue()}}else this.findByFilter(b,a)};IndexedDBTable.prototype.findAll=function(b){var a,c=[];if(1>arguments.length)throw Error("Callback expected.");a=this.connection.beginTransaction(void 0,this.name);a.on("error",function(a){b(a)});a.on("complete",function(a){b(void 0,new IndexedDBResult(c))});a.getObjectStore(this.name).openCursor().onsuccess=function(a){if(a=a.target.result)c.push(a.value),a.continue()}};
IndexedDBTable.prototype.findOne=function(b,a){if(1>arguments.length)throw Error("Callback expected.");if(1==arguments.length)if(arguments[0]instanceof Function)a=arguments[0],b=void 0;else throw Error("Callback expected.");this.find(b,function(b,d){var e;if(b)return a(b);1<=d.length&&(e=d.rows[0]);a(void 0,e)})};IndexedDBTable.prototype.count=function(b){this.findAll(function(a,c){a?b(a):b(void 0,c.length)})};
IndexedDBTable.prototype.insert=function(b,a){function c(a){var h;if(a<b.length)try{h=e.add(b[a]),h.onsuccess=function(b){c(a+1)}}catch(k){f=k,d.rollback()}}var d,e,f;if(1>arguments.length)throw Error("Object(s) to insert expected.");b?(d=this.connection.beginTransaction(void 0,this.name),d.on("abort",function(b){f&&a&&a(Error(f.message))}),d.on("error",function(b){a&&a(b instanceof Error?b:Error(b.message))}),d.on("complete",function(b){a&&a()}),e=d.getObjectStore(this.name),b instanceof Array||
(b=[b]),c(0)):a&&a(Error("Object to insert can't be null or undefined."))};IndexedDBTable.prototype.save=function(b,a){var c;if(1>arguments.length)throw Error("Object to update expected.");if("object"!=typeof b)throw Error("Object to update expected.");c=this.connection.beginTransaction(void 0,this.name);c.on("error",function(b){a&&a(b)});c.on("complete",function(b){a&&a()});c.getObjectStore(this.name).put(b)};
IndexedDBTable.prototype.remove=function(b,a){var c;1==arguments.length&&arguments[0]instanceof Function&&(a=arguments[0],b=void 0);c=this.connection.beginTransaction(void 0,this.name);c.on("complete",function(b){a&&a()});c=c.getObjectStore(this.name);if(b&&0!=Object.keys(b).length){if(0>Object.keys(b).indexOf(this.keyPath))throw Error("Key path expected.");c=c.delete(b[this.keyPath]);c.onerror=function(b){a&&a(b)}}else c=c.clear(),c.onerror=function(b){a&&a(b)}};function IndexedDBTransaction(b,a,c,d){var e=this;Object.defineProperty(this,"native",{value:b});Object.defineProperty(this,"connection",{value:a});Object.defineProperty(this,"abortHandlers",{value:[]});Object.defineProperty(this,"errorHandlers",{value:[]});Object.defineProperty(this,"completeHandlers",{value:[]});Object.defineProperty(this,"state",{value:"active",writable:!0});Object.defineProperty(this,"objectStoreNames",{value:c});b.onerror=function(a){e.connection.transaction=void 0;e.handleErrorEvent(a)};
b.onabort=function(a){e.connection.transaction=void 0;e.handleAbortEvent(a)};b.oncomplete=function(a){e.connection.transaction=void 0;e.handleCompleteEvent(a)};if(d){if(d.error)this.on("error",d.error);if(d.abort)this.on("abort",d.abort);if(d.complete)this.on("complete",d.complete)}}IndexedDBTransaction.prototype.__defineGetter__("mode",function(){return this.native.mode});IndexedDBTransaction.prototype.__defineGetter__("database",function(){return this.connection.database});
IndexedDBTransaction.prototype.on=function(b,a){if(1==arguments.length){var c=arguments[0];if(c.abort)this.on("abort",c.abort);else if(c.error)this.on("error",c.error);else if(c.complete)this.on("complete",c.complete)}else"abort"==b?this.abortHandlers.push(a):"error"==b?this.errorHandlers.push(a):"complete"==b&&this.completeHandlers.push(a)};IndexedDBTransaction.prototype.handleErrorEvent=function(b){this.state="aborted";for(var a=0,c=this.errorHandlers;a<c.length;++a)c[a](b)};
IndexedDBTransaction.prototype.handleAbortEvent=function(b){this.state="error";for(var a=0,c=this.abortHandlers;a<c.length;++a)c[a](b)};IndexedDBTransaction.prototype.handleCompleteEvent=function(b){this.state="committed";for(var a=0,c=this.completeHandlers;a<c.length;++a)c[a](b)};
IndexedDBTransaction.prototype.getObjectStore=function(b){if(("readonly"==this.mode||"readwrite"==this.mode)&&0>this.objectStoreNames.indexOf(b))throw Error("The active transaction only can access to the following object stores: "+(this.objectStores||"no specified")+".");return this.native.objectStore(b)};IndexedDBTransaction.prototype.getTable=function(b){return new IndexedDBTable(this.database,this.getObjectStore(b))};IndexedDBTransaction.prototype.rollback=function(){this.native.abort()};
