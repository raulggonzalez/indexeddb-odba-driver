'use strict';function Driver(c){Object.defineProperty(this,"name",{value:c})}Driver.getDriver=function(c){if("indexeddb"==c.toLowerCase())return new IndexedDBDriver};function Result(c){Object.defineProperty(this,"rows",{value:c})}Result.prototype.__defineGetter__("length",function(){return this.rows.length});Result.prototype.find=function(c){return(new ResultFilter).find(this,c)};function ResultFilter(){}ResultFilter.prototype.find=function(c,b){var a=[];b||(b={});for(var d=0,e=c.rows;d<c.length;++d){var f=e[d];this.check(f,b)&&a.push(f)}return a};ResultFilter.prototype.check=function(c,b){var a=!1,d=Object.keys(b);if(0==d.length)a=!0;else if(1==d.length)a=this.checkProp(c,d[0],b);else for(var a=!0,e=0;e<d.length;++e)if(!this.checkProp(c,d[e],b)){a=!1;break}return a};
ResultFilter.prototype.checkProp=function(c,b,a){var d;a=a[b];if("object"!=typeof a)d=this.$eq(c,b,a);else{var e=Object.keys(a);if(0==e.length)d=!0;else if(1==e.length)d=this.checkOp(c,b,e[0],a);else{d=!0;for(var f=0;f<e.length;++f)if(!this.checkOp(c,b,e[f],a)){d=!1;break}}}return d};
ResultFilter.prototype.checkOp=function(c,b,a,d){if("$eq"==a)c=this.$eq(c,b,d.$eq);else if("$ne"==a)c=this.$ne(c,b,d.$ne);else if("$lt"==a)c=this.$lt(c,b,d.$lt);else if("$le"==a)c=this.$le(c,b,d.$le);else if("$gt"==a)c=this.$gt(c,b,d.$gt);else if("$ge"==a)c=this.$ge(c,b,d.$ge);else if("$like"==a)c=this.$like(c,b,d.$like);else if("$notLike"==a)c=this.$notLike(c,b,d.$notLike);else if("$in"==a)c=this.$in(c,b,d.$in);else if("$notIn"==a)c=this.$notIn(c,b,d.$notIn);else throw Error("Unknown operator: '"+
a+"'.");return c};ResultFilter.prototype.$eq=function(c,b,a){return void 0===a?void 0===c[b]:null===a?null===c[b]:c[b]==a};ResultFilter.prototype.$ne=function(c,b,a){return void 0===a?void 0!==c[b]:null===a?null!==c[b]:c[b]!=a};ResultFilter.prototype.$lt=function(c,b,a){return void 0===a||null===a?!1:c[b]<a};ResultFilter.prototype.$le=function(c,b,a){return void 0===a||null===a?!1:c[b]<=a};ResultFilter.prototype.$gt=function(c,b,a){return void 0===a||null===a?!1:c[b]>a};
ResultFilter.prototype.$ge=function(c,b,a){return void 0===a||null===a?!1:c[b]>=a};ResultFilter.prototype.$like=function(c,b,a){return void 0===a||null===a?this.$eq(c,b,a):(new RegExp(a)).test(c[b])};ResultFilter.prototype.$notLike=function(c,b,a){return void 0===a||null===a?this.$ne(c,b,a):!this.$like(c,b,a)};ResultFilter.prototype.$in=function(c,b,a){return void 0===a||null===a?!1:0<=a.indexOf(c[b])};ResultFilter.prototype.$notIn=function(c,b,a){return!this.$in(c,b,a)};var util={inherits:function(c,b){c.super_=b;c.prototype=Object.create(b.prototype,{constructor:{value:c,enumerable:!1,writable:!0,configurable:!0}})},_extend:function(c,b){if("object"==typeof b)for(var a=0,d=Object.keys(b);a<d.length;++a){var e=d[a];c[e]=b[e]}return c},getBrowserName:function(){return window.chrome?"Chrome":"Other"}};function IndexedDBConnection(c){Object.defineProperty(this,"config",{value:c});Object.defineProperty(this,"activeTransaction",{value:void 0,writable:!0});try{Object.defineProperty(this,"indexedDB",{value:Modernizr.indexedDB})}catch(b){Object.defineProperty(this,"indexedDB",{value:window.indexedDB})}}IndexedDBConnection.prototype.clone=function(){return new IndexedDBConnection(util._extend({},this.config))};
IndexedDBConnection.prototype.open=function(c){var b=this,a;a=this.indexedDB;if(this.connected)c&&c(void 0,this.database);else{if(1>arguments.length)throw Error("Callback expected.");a=this.config.version?a.open(this.config.database,this.config.version):a.open(this.config.database);a.onsuccess=function(a){Object.defineProperty(b,"database",{value:new IndexedDBDatabase(b,a.target.result),enumerable:!0,configurable:!0});c&&c(void 0,b.database)};a.onerror=function(b){c&&c(b)}}};
IndexedDBConnection.prototype.__defineGetter__("connected",function(){return void 0!==this.database&&null!==this.database});IndexedDBConnection.prototype.close=function(c){this.database&&this.database.native.close();delete this.database;c&&c()};
IndexedDBConnection.prototype.createDatabase=function(c,b){var a=this,d=this.indexedDB;if(this.connected)throw Error("Connection opened.");d=d.open(this.config.database);d.onerror=function(c){a.activeTransaction=void 0;b&&b(c)};d.onupgradeneeded=function(b){a.activeTransaction=b.currentTarget.transaction;c&&c(new IndexedDBDatabase(a,b.target.result))};d.onsuccess=function(c){a.activeTransaction=void 0;c.target.result.close();b&&b()}};
IndexedDBConnection.prototype.alterDatabase=function(c,b){function a(){var a=f.open(e.config.database);a.onerror=function(a){b&&b(a)};a.onsuccess=function(a){a=a.target.result;var d;d=a.version+1;a.close();a=f.open(e.config.database,d);a.onupgradeneeded=function(a){e.activeTransaction=a.currentTarget.transaction;c(new IndexedDBDatabase(e,a.target.result))};a.onerror=function(a){e.activeTransaction=void 0;b&&b(a)};a.onsuccess=function(a){e.activeTransaction=void 0;a.target.result.close();g?e.open(b):
b&&b()}}}function d(){e.close(function(c){if(c){if(b)return b(c)}else a()})}var e=this,f=this.indexedDB,g;if(1>arguments.length)throw Error("Operation to alter schema expected.");this.connected?(g=!0,d()):(g=!1,a())};IndexedDBConnection.prototype.dropDatabase=function(c){this.indexedDB.deleteDatabase(this.config.database);c&&c()};
IndexedDBConnection.prototype.hasDatabase=function(c,b){var a=this.indexedDB,d;if(1>arguments.length)throw Error("Callback expected.");1==arguments.length&&(b=arguments[0],c=this.config.database);if("Chrome"==util.getBrowserName())d=this.indexedDB.webkitGetDatabaseNames(),d.onsuccess=function(a){b&&b(void 0,a.target.result.contains(c))},d.onerror=function(a){b&&b(a)};else{var e=!0;d=a.open(c);d.onupgradeneeded=function(a){e=!1};d.onsuccess=function(c){d.result.close();e&&a.deleteDatabase(self);b(void 0,
e)}}};function IndexedDBDatabase(c,b,a){Object.defineProperty(this,"connection",{value:c});Object.defineProperty(this,"name",{value:b.name,enumerable:!0});Object.defineProperty(this,"version",{value:b.version,enumerable:!0});Object.defineProperty(this,"native",{value:b})}IndexedDBDatabase.prototype.__defineGetter__("activeTransaction",function(){return this.connection.activeTransaction});
IndexedDBDatabase.prototype.createTable=function(c,b,a){if(1>arguments.length)throw Error("Table name expected.");2==arguments.length&&arguments[1]instanceof Function&&(a=arguments[1],b=void 0);b=util._extend({},b);b.hasOwnProperty("id")&&!b.hasOwnProperty("keyPath")&&(b.keyPath=b.id);if(this.activeTransaction)if(this.native.objectStoreNames.contains(c))a&&a(Error("Object store '"+c+"' already exists."));else{var d=this.native.createObjectStore(c,b);a&&a(void 0,d)}else a&&a(Error("Database.createTable() only into Connection.createDatabase() or Connection.alterDatabase()."))};
IndexedDBDatabase.prototype.createTables=function(c,b){var a=[];if(this.activeTransaction){for(var d=0;d<c.length;++d){var e=c[d];a.push(this.native.createObjectStore(e.name,e))}b&&b(void 0,a)}else b&&b(Error("Database.createTables() only into Connection.createDatabase() or Connection.alterDatabase()."))};IndexedDBDatabase.prototype.hasTable=function(c,b){if(2>arguments.length)throw Error("Table name and callback expected.");b(void 0,this.native.objectStoreNames.contains(c))};
IndexedDBDatabase.prototype.hasTables=function(c,b){if(2>arguments.length)throw Error("Table names and callback expected.");if(b)if(0==c.length)b(void 0,!1);else{for(var a=!0,d=0,e=this.native.objectStoreNames;d<c.length;++d)if(!e.contains(c[d])){a=!1;break}b(void 0,a)}};
IndexedDBDatabase.prototype.findTable=function(c,b){var a;if(2>arguments.length)throw Error("Table name and callback expected.");if(this.native.objectStoreNames.contains(c)){var d;d=this.activeTransaction;d||(d=this.native.transaction([c],"readonly"),d.onerror=function(a){b(a)},d.oncomplete=function(c){b(void 0,a)});a=new IndexedDBTable(this,d.objectStore(c));d===this.activeTransaction&&b(void 0,a)}else b()};
IndexedDBDatabase.prototype.dropTable=function(c,b){this.activeTransaction?(this.native.objectStoreNames.contains(c)&&this.native.deleteObjectStore(c),b&&b()):b&&b(Error("Database.dropTable() only into Connection.alterDatabase()."))};
IndexedDBDatabase.prototype.findIndex=function(c,b,a){var d,e;if(3>arguments.length)throw Error("Table name, index name and callback expected.");this.native.objectStoreNames.contains(c)&&(d=this.activeTransaction||this.native.transaction([c],"readonly"),d=d.objectStore(c),d.indexNames.contains(b)&&(e=(new IndexedDBTable(this,d)).indexes[b]));a(void 0,e)};
IndexedDBDatabase.prototype.hasIndex=function(c,b,a){var d,e;if(3>arguments.length)throw Error("Table name, index name and callback expected.");if(!this.native.objectStoreNames.contains(c))return a(void 0,!1);d=this.activeTransaction;d||(d=this.native.transaction([c],"readonly"),d.onerror=function(b){a(b)},d.oncomplete=function(b){a(void 0,e)});e=d.objectStore(c).indexNames.contains(b);d===this.activeTransaction&&a(void 0,e)};
IndexedDBDatabase.prototype.createIndex=function(c,b,a,d,e){var f;if(3>arguments.length)throw Error("Table name, index name and indexing column name expected.");4==arguments.length&&arguments[3]instanceof Function&&(e=arguments[3],d=void 0);(f=this.activeTransaction)?this.native.objectStoreNames.contains(c)?(f=f.objectStore(c),f.indexNames.contains(b)?e&&e(Error("Index '"+b+"' on '"+c+"' already exists.")):(f.createIndex(b,a,d),e&&e())):e&&e(Error("Object store '"+c+"' doesn't exist.")):e&&e(Error("Database.createIndex() only into Connection.createDatabase() or Connection.alterDatabase()."))};
IndexedDBDatabase.prototype.dropIndex=function(c,b,a){var d;if(2>arguments.length)throw Error("Table name and index name expected.");(d=this.activeTransaction)?(this.native.objectStoreNames.contains(c)&&(d=d.objectStore(c),d.indexNames.contains(b)&&d.deleteIndex(b)),a&&a()):a&&a(Error("Database.dropIndex() only into Connection.alterDatabase()."))};function IndexedDBDriver(){IndexedDBDriver.super_.call(this,"IndexedDB")}util.inherits(IndexedDBDriver,Driver);IndexedDBDriver.prototype.createConnection=function(c){if(!c||!c.database)throw Error("Database name expected.");return new IndexedDBConnection(c)};function IndexedDBIndex(c,b){Object.defineProperty(this,"table",{value:c});Object.defineProperty(this,"name",{value:b.name});Object.defineProperty(this,"column",{value:b.keyPath});Object.defineProperty(this,"unique",{value:b.unique});Object.defineProperty(this,"native",{value:b})}IndexedDBIndex.prototype.__defineGetter__("database",function(){return this.table.database});IndexedDBIndex.prototype.__defineGetter__("connection",function(){return this.table.connection});function IndexedDBResult(c,b){b||(b={});b.byKey||(b.byKey=!1);b.byIndex||(b.byIndex=!1);IndexedDBResult.super_.call(this,c);Object.defineProperty(this,"byKey",{value:b.byKey});Object.defineProperty(this,"byIndex",{value:b.byIndex})}util.inherits(IndexedDBResult,Result);function IndexedDBTable(c,b){var a={},d={};Object.defineProperty(this,"database",{value:c});Object.defineProperty(this,"name",{value:b.name});Object.defineProperty(this,"keyPath",{value:b.keyPath});Object.defineProperty(this,"autoIncrement",{value:b.autoIncrement});Object.defineProperty(this,"connection",{value:c.connection});Object.defineProperty(this,"indexes",{value:a});Object.defineProperty(this,"indexed",{value:d});for(var e=0;e<b.indexNames.length;++e){var f=b.indexNames[e],g=new IndexedDBIndex(this,
b.index(f));a[f]=g;d[g.column]=g}}IndexedDBTable.prototype.__defineGetter__("activeTransaction",function(){return this.connection.activeTransaction});IndexedDBTable.prototype.hasIndex=function(c,b){if(2>arguments.length)throw Error("Index name and callback expected.");this.database.hasIndex(this.name,c,b)};IndexedDBTable.prototype.findIndex=function(c,b){if(2>arguments.length)throw Error("Index name and callback expected.");this.database.findIndex(this.name,c,b)};
IndexedDBTable.prototype.createIndex=function(c,b,a,d){if(2>arguments.length)throw Error("Index name and indexing column expected.");3==arguments.length&&arguments[2]instanceof Function&&(d=arguments[2],a={});this.database.createIndex(this.name,c,b,a,d)};IndexedDBTable.prototype.dropIndex=function(c,b){if(1>arguments.length)throw Error("Index name expected.");this.database.dropIndex(this.name,c,b)};
IndexedDBTable.prototype.__defineGetter__("indexed",function(){var c,b=[];(c=this.activeTransaction)||this.database.native.transaction([this.name],"readonly");c=c.objectStore(this.name);for(var a=0,d=c.indexNames;a<d.length;++a)b.push(c.index(d[a]).keyPath);return b});IndexedDBTable.prototype.checkQueryType=function(c){};IndexedDBTable.prototype.validateWhere=function(c){return 0<=Object.keys(c).indexOf(this.keyPath)};
IndexedDBTable.prototype.find=function(c,b){var a;if(1>arguments.length)throw Error("Callback expected.");if(1==arguments.length)if(arguments[0]instanceof Function)b=arguments[0],c=void 0;else throw Error("Callback expected.");c||(c={});a=Object.keys(c);0==a.length?this.findAll(b):1==a.length?(a=a[0],a==this.keyPath?this.findByKeyPath(c,b):this.indexed[a]?this.findByIndex(c,b):this.findByFilter(c,b)):this.findByFilter(c,b)};
IndexedDBTable.prototype.findByFilter=function(c,b){var a,d=[],e=new ResultFilter;if(1>arguments.length)throw Error("Callback expected.");if(1==arguments.length)if(arguments[0]instanceof Function)b=arguments[0],c=void 0;else throw Error("Callback expected.");c&&0!=Object.keys(c).length?(a=this.activeTransaction,a||(a=this.database.native.transaction([this.name],"readonly"),a.onerror=function(a){b(a)},a.oncomplete=function(a){b(void 0,new Result(d))}),a=a.objectStore(this.name),a=a.openCursor(),a.onsuccess=
function(a){if(a=a.target.result){var b=a.value;e.check(b,c)&&d.push(b);a.continue()}}):this.findAll(b)};IndexedDBTable.prototype.getIDBKeyRange=function(c,b){var a;"$eq"==c?a=IDBKeyRange.only(b.$eq):"$lt"==c?a=IDBKeyRange.upperBound(b.$lt,!0):"$le"==c?a=IDBKeyRange.upperBound(b.$le):"$gt"==c?a=IDBKeyRange.lowerBound(b.$gt,!0):"$ge"==c&&(a=IDBKeyRange.lowerBound(b.$ge));return a};
IndexedDBTable.prototype.findByKeyPath=function(c,b){var a,d;a=c[Object.keys(c)[0]];if("object"!=typeof a)d=IDBKeyRange.only(a);else{var e=Object.keys(a);1==e.length&&(d=this.getIDBKeyRange(e[0],a))}if(d){var f=[];a=this.activeTransaction;a||(a=this.database.native.transaction([this.name],"readonly"),a.onerror=function(a){b(a)},a.oncomplete=function(a){b(void 0,new IndexedDBResult(f,{byKey:!0}))});d=a.objectStore(this.name).openCursor(d);d.onerror=function(a){b(a)};d.onsuccess=function(a){if(a=a.target.result)f.push(a.value),
a.continue()}}else this.findByFilter(c,b)};
IndexedDBTable.prototype.findByIndex=function(c,b){var a,d,e;a=Object.keys(c)[0];d=this.indexed[a];a=c[a];if("object"!=typeof a)e=IDBKeyRange.only(a);else{var f=Object.keys(a);1==f.length&&(e=this.getIDBKeyRange(f[0],a))}if(e){var g=[];a=this.activeTransaction;a||(a=this.database.native.transaction([this.name],"readonly"),a.onerror=function(a){b(a)},a.oncomplete=function(a){b(void 0,new IndexedDBResult(g,{byIndex:!0}))});d=a.objectStore(this.name).index(d.name).openCursor(e);d.onerror=function(a){b(a)};
d.onsuccess=function(a){if(a=a.target.result)g.push(a.value),a.continue()}}else this.findByFilter(c,b)};IndexedDBTable.prototype.findAll=function(c){var b,a=[];if(1>arguments.length)throw Error("Callback expected.");b=this.activeTransaction;b||(b=this.database.native.transaction([this.name],"readonly"),b.onerror=function(a){c(a)},b.oncomplete=function(b){c(void 0,new Result(a))});b.objectStore(this.name).openCursor().onsuccess=function(b){if(b=b.target.result)a.push(b.value),b.continue()}};
IndexedDBTable.prototype.findOne=function(c,b){if(1>arguments.length)throw Error("Callback expected.");if(1==arguments.length)if(arguments[0]instanceof Function)b=arguments[0],c=void 0;else throw Error("Callback expected.");this.find(c,function(a,c){var e;if(a)return b(a);1<=c.length&&(e=c.rows[0]);b(void 0,e)})};IndexedDBTable.prototype.count=function(c){this.findAll(function(b,a){b?c(b):c(void 0,a.length)})};
IndexedDBTable.prototype.insert=function(c,b){function a(b){var h;if(b<c.length)try{h=e.add(c[b]),h.onsuccess=function(c){a(b+1)}}catch(k){f=k,d.abort()}}var d,e,f;if(1>arguments.length)throw Error("Object(s) to insert expected.");c?(d=this.activeTransaction,d||(d=this.database.native.transaction([this.name],"readwrite"),d.onabort=function(a){f&&b&&b(Error(f.message))},d.onerror=function(a){b&&b(a instanceof Error?a:Error(a.message))},d.oncomplete=function(a){b&&b()}),e=d.objectStore(this.name),c instanceof
Array||(c=[c]),a(0)):b&&b(Error("Object to insert can't be null or undefined."))};IndexedDBTable.prototype.save=function(c,b){var a;if(1>arguments.length)throw Error("Object to update expected.");if("object"!=typeof c)throw Error("Object to update expected.");a=this.activeTransaction;a||(a=this.database.native.transaction([this.name],"readwrite"),a.onerror=function(a){b&&b(a)},a.oncomplete=function(a){b&&b()});a.objectStore(this.name).put(c);a===this.activeTransaction&&b&&b()};
IndexedDBTable.prototype.remove=function(c,b){var a;1==arguments.length&&arguments[0]instanceof Function&&(b=arguments[0],arguments[0]=void 0);a=this.database.native.transaction([this.name],"readwrite");a.onerror=function(a){b(a)};a.oncomplete=function(a){b&&b()};a=a.objectStore(this.name);if(c&&0!=Object.keys(c).length){if(0>Object.keys(c).indexOf(this.keyPath))throw Error("Key path expected.");a=a.delete(c[this.keyPath]);a.onerror=function(a){b(a)}}else a=a.clear(),a.onerror=function(a){b(a)}};
